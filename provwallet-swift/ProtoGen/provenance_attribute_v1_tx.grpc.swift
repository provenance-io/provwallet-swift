//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: provenance/attribute/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Msg defines the attribute module Msg service.
///
/// Usage: instantiate `Provenance_Attribute_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Provenance_Attribute_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Provenance_Attribute_V1_MsgClientInterceptorFactoryProtocol? { get }

  func addAttribute(
    _ request: Provenance_Attribute_V1_MsgAddAttributeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Provenance_Attribute_V1_MsgAddAttributeRequest, Provenance_Attribute_V1_MsgAddAttributeResponse>

  func updateAttribute(
    _ request: Provenance_Attribute_V1_MsgUpdateAttributeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Provenance_Attribute_V1_MsgUpdateAttributeRequest, Provenance_Attribute_V1_MsgUpdateAttributeResponse>

  func deleteAttribute(
    _ request: Provenance_Attribute_V1_MsgDeleteAttributeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Provenance_Attribute_V1_MsgDeleteAttributeRequest, Provenance_Attribute_V1_MsgDeleteAttributeResponse>

  func deleteDistinctAttribute(
    _ request: Provenance_Attribute_V1_MsgDeleteDistinctAttributeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Provenance_Attribute_V1_MsgDeleteDistinctAttributeRequest, Provenance_Attribute_V1_MsgDeleteDistinctAttributeResponse>
}

extension Provenance_Attribute_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "provenance.attribute.v1.Msg"
  }

  /// AddAttribute defines a method to verify a particular invariance.
  ///
  /// - Parameters:
  ///   - request: Request to send to AddAttribute.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addAttribute(
    _ request: Provenance_Attribute_V1_MsgAddAttributeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Provenance_Attribute_V1_MsgAddAttributeRequest, Provenance_Attribute_V1_MsgAddAttributeResponse> {
    return self.makeUnaryCall(
      path: "/provenance.attribute.v1.Msg/AddAttribute",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddAttributeInterceptors() ?? []
    )
  }

  /// UpdateAttribute defines a method to verify a particular invariance.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateAttribute.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateAttribute(
    _ request: Provenance_Attribute_V1_MsgUpdateAttributeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Provenance_Attribute_V1_MsgUpdateAttributeRequest, Provenance_Attribute_V1_MsgUpdateAttributeResponse> {
    return self.makeUnaryCall(
      path: "/provenance.attribute.v1.Msg/UpdateAttribute",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateAttributeInterceptors() ?? []
    )
  }

  /// DeleteAttribute defines a method to verify a particular invariance.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAttribute.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteAttribute(
    _ request: Provenance_Attribute_V1_MsgDeleteAttributeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Provenance_Attribute_V1_MsgDeleteAttributeRequest, Provenance_Attribute_V1_MsgDeleteAttributeResponse> {
    return self.makeUnaryCall(
      path: "/provenance.attribute.v1.Msg/DeleteAttribute",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteAttributeInterceptors() ?? []
    )
  }

  /// DeleteDistinctAttribute defines a method to verify a particular invariance.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDistinctAttribute.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteDistinctAttribute(
    _ request: Provenance_Attribute_V1_MsgDeleteDistinctAttributeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Provenance_Attribute_V1_MsgDeleteDistinctAttributeRequest, Provenance_Attribute_V1_MsgDeleteDistinctAttributeResponse> {
    return self.makeUnaryCall(
      path: "/provenance.attribute.v1.Msg/DeleteDistinctAttribute",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteDistinctAttributeInterceptors() ?? []
    )
  }
}

internal protocol Provenance_Attribute_V1_MsgClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'addAttribute'.
  func makeAddAttributeInterceptors() -> [ClientInterceptor<Provenance_Attribute_V1_MsgAddAttributeRequest, Provenance_Attribute_V1_MsgAddAttributeResponse>]

  /// - Returns: Interceptors to use when invoking 'updateAttribute'.
  func makeUpdateAttributeInterceptors() -> [ClientInterceptor<Provenance_Attribute_V1_MsgUpdateAttributeRequest, Provenance_Attribute_V1_MsgUpdateAttributeResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteAttribute'.
  func makeDeleteAttributeInterceptors() -> [ClientInterceptor<Provenance_Attribute_V1_MsgDeleteAttributeRequest, Provenance_Attribute_V1_MsgDeleteAttributeResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteDistinctAttribute'.
  func makeDeleteDistinctAttributeInterceptors() -> [ClientInterceptor<Provenance_Attribute_V1_MsgDeleteDistinctAttributeRequest, Provenance_Attribute_V1_MsgDeleteDistinctAttributeResponse>]
}

internal final class Provenance_Attribute_V1_MsgClient: Provenance_Attribute_V1_MsgClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Provenance_Attribute_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the provenance.attribute.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Provenance_Attribute_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

